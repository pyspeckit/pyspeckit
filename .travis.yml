language: python

python:
    #- 2.6
    - 2.7
    #- 3.2
    #- 3.3
    #- 3.4
    # This is just for "egg_info".  All other builds are explicitly given in the matrix
env:
    global:
        # The following versions are the 'default' for tests, unless
        # overidden underneath. They are defined here in order to save having
        # to repeat them for all configurations.
        - MATPLOTLIB_VERSION=1.4
        - NUMPY_VERSION=1.9
        - ASTROPY_VERSION=stable
        - CONDA_INSTALL='conda install -c astropy-ci-extras --yes'
        - PIP_INSTALL='pip install'
    matrix:
        - SETUP_CMD='egg_info'

matrix:
    include:

        # Do a coverage test in Python 2. 
        #- python: 2.7
        #  env: SETUP_CMD='test --coverage'

        # Check for sphinx doc build warnings - we do this first because it
        # may run for a long time
        - python: 2.7
          #env: SETUP_CMD='build_sphinx -w'  # 
          env: SETUP_CMD='build_sphinx' # don't crash for warnings

        # Try Astropy development version
        - python: 2.7
          env: ASTROPY_VERSION=development SETUP_CMD='test'
        #- python: 3.3
        #  env: ASTROPY_VERSION=development SETUP_CMD='test'

        # Try all python versions with the latest numpy
        #- python: 2.6
        #  env: SETUP_CMD='test'
        - python: 2.7
          env: SETUP_CMD='test'
        #- python: 3.2
        #  env: SETUP_CMD='test'
        #- python: 3.3
        #  env: SETUP_CMD='test'
        #- python: 3.4
        #  env: SETUP_CMD='test'

        # Try older numpy versions
        #- python: 3.2
        #  env: NUMPY_VERSION=1.6 SETUP_CMD='test'
        - python: 2.7
          env: NUMPY_VERSION=1.9 SETUP_CMD='test'
        - python: 2.7
          env: NUMPY_VERSION=1.8 SETUP_CMD='test'
        # numpy 1.5 stopped working - I think it's a conda issue

before_install:


    # Use utf8 encoding. Should be default, but this is insurance against
    # future changes
    - export PYTHONIOENCODING=UTF8
    - wget http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh
    - chmod +x miniconda.sh
    - ./miniconda.sh -b
    - export PATH=/home/travis/miniconda/bin:$PATH
    - conda update --yes conda

    # UPDATE APT-GET LISTINGS
    - sudo apt-get update

    # DOCUMENTATION DEPENDENCIES
    - if [[ $SETUP_CMD == build_sphinx* ]]; then sudo apt-get install graphviz texlive-latex-extra dvipng; fi
    # http://about.travis-ci.org/docs/user/gui-and-headless-browsers/
    - "export DISPLAY=:99.0"
    - "sh -e /etc/init.d/xvfb start"

install:

    # CONDA
    - conda create --yes -n test -c astropy-ci-extras python=$TRAVIS_PYTHON_VERSION
    - source activate test

    # CORE DEPENDENCIES
    - if [[ $SETUP_CMD != egg_info ]]; then $CONDA_INSTALL numpy=$NUMPY_VERSION pytest pip Cython matplotlib=$MATPLOTLIB_VERSION scipy jinja2; fi
    - if [[ $SETUP_CMD != egg_info ]]; then $PIP_INSTALL pytest-xdist; fi

    # ASTROPY
    - if [[ $SETUP_CMD != egg_info ]] && [[ $ASTROPY_VERSION == development ]]; then $PIP_INSTALL git+http://github.com/astropy/astropy.git#egg=astropy; fi
    - if [[ $SETUP_CMD != egg_info ]] && [[ $ASTROPY_VERSION == stable ]]; then $CONDA_INSTALL numpy=$NUMPY_VERSION astropy; fi

    # OPTIONAL DEPENDENCIES
    # Here you can add any dependencies your package may have. You can use
    # conda for packages available through conda, or pip for any other
    # packages. You should leave the `numpy=$NUMPY_VERSION` in the `conda`
    # install since this ensures Numpy does not get automatically upgraded.
    # - if [[ $SETUP_CMD != egg_info ]]; then $CONDA_INSTALL numpy=$NUMPY_VERSION ... ; fi
    - if [[ $SETUP_CMD != egg_info ]]; then $PIP_INSTALL spectral-cube; fi

    # DOCUMENTATION DEPENDENCIES
    # build_sphinx needs sphinx and matplotlib (for plot_directive). Note that
    # this matplotlib will *not* work with py 3.x, but our sphinx build is
    # currently 2.7, so that's fine
    - if [[ $SETUP_CMD == build_sphinx* ]]; then $CONDA_INSTALL numpy=$NUMPY_VERSION Sphinx matplotlib; fi

    # COVERAGE DEPENDENCIES
    - if [[ $SETUP_CMD == 'test --coverage' ]]; then $PIP_INSTALL coverage coveralls; fi

script:
   - python setup.py $SETUP_CMD

after_success:
    # If coveralls.io is set up for this package, uncomment the line
    # below and replace "packagename" with the name of your package.
    # The coveragerc file may be customized as needed for your package.
    # - if [[ $SETUP_CMD == 'test --coverage' ]]; then coveralls --rcfile='packagename/tests/coveragerc'; fi
